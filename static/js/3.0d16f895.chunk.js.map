{"version":3,"sources":["services/TechsService.js","components/WebComponents/Button.jsx","components/WebComponents/Input.jsx","redux/actions/techsActions.js","components/WebComponents/Option.jsx","components/WebComponents/Select.jsx","utils/enums.js","components/FilterListPage.jsx","components/ListPage.jsx"],"names":["getAllTechs","a","axios","getAxiosInstance","get","TECHS","ALL","response","TYPES_TECHS","name","value","applyFilter","listTechs","filter","nombre","tipos","ordenarPorNombre","listaConFiltroAplicado","length","item","tech","toLowerCase","includes","type","ORDER","ASCENDENTE","sort","b","localeCompare","DESCENDENTE","reverse","getTechAndApplyFilter","lista","data","Button","props","id","disabled","children","Input","className","defaultProps","updateFilter","values","dispatch","UPDATE_FILTER","SET_LIST_TECHS_BY_FILTER","setListTechs","updateFavouritesTech","UPDATE_FAVOURITES_TECH","Option","Select","options","optionClassName","map","connect","state","techsReducer","bindActionCreators","useEffect","onNombreChange","e","nombreABuscar","target","onOrderNameChange","onTypeChange","tiposSeleccionados","Array","from","selectedOptions","placeholder","onChange","onClick","multiple","list","techs","Listado","lazy","Promise","resolve","setTimeout","fetchListTechs","fetchData","fallback","Loader"],"mappings":"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","file":"static/js/3.0d16f895.chunk.js","sourcesContent":["import getAxiosInstance from \"../configuration/httpClient\"\nimport { TECHS } from \"../utils/endpoints\"\nimport { ORDER } from \"../utils/enums\"\n\nexport const getAllTechs = async () => {\n    const axios = getAxiosInstance()\n    const response = await axios.get(TECHS.ALL)\n    return response\n}\n\n/*TODO levantar del listado de techs, recorrer tech una por una e ir agregando las que no estan.\nAhora hardcodeadas\nSino endpoint en API, pero ahora no hay\n*/\nexport const TYPES_TECHS = [\n    {\n        name: \"--Seleccionar--\",\n        value: \"\"\n    },\n    {\n        name: \"Back-End\",\n        value: \"Back-End\"\n    },\n    {\n        name: \"Front-End\",\n        value: \"Front-End\"\n    },\n    {\n        name: \"Mobile\",\n        value: \"Mobile\"\n    }]\n\nexport const applyFilter = (listTechs, filter) => {\n    const { nombre, tipos, ordenarPorNombre } = filter\n    let listaConFiltroAplicado = listTechs\n\n    if (nombre && nombre.length > 0)\n        listaConFiltroAplicado = [...listaConFiltroAplicado].filter(item => item.tech.toLowerCase().includes(nombre.toLowerCase()))\n\n    if (tipos && tipos.length > 0)\n        listaConFiltroAplicado = [...listaConFiltroAplicado].filter(item => tipos.includes(item.type))\n\n    if (ordenarPorNombre === ORDER.ASCENDENTE)\n        listaConFiltroAplicado = [...listaConFiltroAplicado].sort((a, b) => a.tech.toLowerCase().localeCompare(b.tech.toLowerCase()))\n    else if (ordenarPorNombre === ORDER.DESCENDENTE)\n        listaConFiltroAplicado = [...listaConFiltroAplicado].sort((a, b) => a.tech.toLowerCase().localeCompare(b.tech.toLowerCase())).reverse()\n\n    return listaConFiltroAplicado\n}\n\nexport const getTechAndApplyFilter = async (filter) => {\n    const response = await getAllTechs()\n    const lista = response.data\n    return applyFilter(lista, filter)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst Button = props => {\n    const { id, disabled, type } = props\n    return <>\n        <button id={id} type={type} disabled={disabled} {...props}>{props.children}</button>\n    </>\n};\n\nButton.propTypes = {\n    id: PropTypes.string,\n    disabled: PropTypes.bool,\n    type: PropTypes.string,\n  };\n\nexport default Button;","import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst Input = props => {\n    const { id, name, type, className } = props\n    return <>\n        <input type={type} id={id} name={name} className={className} {...props}></input>\n    </>\n};\n\nInput.defaultProps = {\n    type: \"text\",\n    className: \"input input-round-large input-border\"\n  };\n\nInput.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n  };\n\nexport default Input;\n\n","import { getTechAndApplyFilter } from \"../../services/TechsService\";\nimport { SET_LIST_TECHS_BY_FILTER, UPDATE_FILTER, UPDATE_FAVOURITES_TECH } from \"../types/techsTypes\";\n\nexport const updateFilter = (values) => async dispatch => {\n    //TODO esto es mas un action creator que un action. Ver de reubicar\n    await dispatch({\n        type: UPDATE_FILTER,\n        values: values\n    })\n    const lista = await getTechAndApplyFilter(values)\n    await dispatch({\n        type: SET_LIST_TECHS_BY_FILTER,\n        values: lista\n    })\n};\n\nexport const setListTechs = (values) => async dispatch =>{\n    await dispatch({\n        type: SET_LIST_TECHS_BY_FILTER,\n        values: values\n    })\n};\n\nexport const updateFavouritesTech = (values) => async dispatch =>{\n    await dispatch({\n        type: UPDATE_FAVOURITES_TECH,\n        values: values\n    })\n};\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst Option = props => {\n    const { name, value, className } = props\n    return <>\n        <option value={value} className={className}>{name}</option>\n    </>\n};\n\nOption.defaultProps = {\n    className: \"option\"\n}\n\nOption.propTypes = {\n    value: PropTypes.string,\n    name: PropTypes.string,\n  };\n\nexport default Option;\n\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Option from './Option';\n\nconst Select = props => {\n    const { id, name, options, className, optionClassName } = props\n    return <>\n        {/* <label for=\"cars\">Choose a car:</label> */}\n        <select name={name} id={id} className={className} {...props}>\n            {\n                options.length > 0 && options.map((item) => {\n                    return <Option value={item.value} name={item.name} className={optionClassName}/>\n                })\n            }\n        </select>\n    </>\n};\n\nSelect.defaultProps = {\n    options: [],\n    className: \"select\",\n};\n\nSelect.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.shape(\n        {\n            value: PropTypes.string,\n            name: PropTypes.string\n        }\n    )),\n    className: PropTypes.string\n};\n\nexport default Select;\n\n\n\n","export const ORDER = {\n    ASCENDENTE: true,\n    DESCENDENTE: false,\n}","import React, { useEffect } from 'react'\nimport Button from './WebComponents/Button'\nimport Input from './WebComponents/Input'\nimport Select from './WebComponents/Select'\nimport { connect } from \"react-redux\"\nimport { TYPES_TECHS } from '../services/TechsService'\nimport { updateFilter } from '../redux/actions/techsActions';\nimport { ORDER } from '../utils/enums'\nimport { bindActionCreators } from 'redux'\n\nconst FilterListPage = props => {\n    const { updateFilter } = props\n    const { filter } = props\n\n    useEffect(() => {\n\n    }, [])\n\n    const onNombreChange = async (e) => {\n        const nombreABuscar = e.target.value\n        await updateFilter({ ...filter, nombre: nombreABuscar })\n    }\n\n    const onOrderNameChange = async () => {\n        if (filter.ordenarPorNombre === null) {\n            await updateFilter({ ...filter, ordenarPorNombre: ORDER.ASCENDENTE })\n        }\n        else {\n            await updateFilter({ ...filter, ordenarPorNombre: !filter.ordenarPorNombre })\n        }\n    }\n\n    const onTypeChange = async (e) => {\n        let tiposSeleccionados = Array.from(e.target.selectedOptions, (item) => item.value)\n\n        if (tiposSeleccionados.length === 1 && tiposSeleccionados.includes(\"\"))\n            tiposSeleccionados = []\n\n        await updateFilter({ ...filter, tipos: tiposSeleccionados })\n    }\n\n    return <div className=\"filter-list-container\">\n        <div className=\"filter-list-item\">\n            <Input id=\"inputFilterNombre\" name=\"filterNombre\" placeholder=\"Nombre\" onChange={onNombreChange}></Input>\n        </div>\n        <div className=\"filter-list-item\">\n            <Button id=\"inputFilterOrderNombre\" className=\"btn-asc-desc\" onClick={onOrderNameChange} type=\"button\">\n                {filter.ordenarPorNombre !== null ? filter.ordenarPorNombre === ORDER.ASCENDENTE ? \"Ascendente\" : \"Descendente\" : \"ASC/DES\"}\n            </Button>\n        </div>\n        <div className=\"filter-list-item\">\n            <Select id=\"inputFilterTipo\" name=\"filterTipo\" className=\"select-multiple\" multiple options={TYPES_TECHS} value={filter.tipos} onChange={onTypeChange} \n            optionClassName=\"\"/>\n        </div>\n    </div>\n};\n\nconst mapStateToProps = state => {\n    return {\n        filter: state.techsReducer.filter,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators({\n        updateFilter: updateFilter,\n    }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterListPage);","import React, { useEffect, lazy, Suspense } from 'react'\nimport { getAllTechs } from '../services/TechsService';\nimport FilterListPage from './FilterListPage';\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from 'redux'\nimport { setListTechs, updateFilter } from '../redux/actions/techsActions';\nimport Loader from './WebComponents/Loader';\n\nconst ListPage = props => {\n  const { list } = props\n  const { setListTechs } = props\n  const Listado = lazy(() => {\n    return new Promise(resolve => {\n      setTimeout(() => resolve(import('./ListTechs')), 400);\n    });\n  }\n  );\n\n  useEffect(() => {\n    async function fetchData() {\n      const listTechs = await fetchListTechs()\n      setListTechs(listTechs)\n    }\n    fetchData()\n  }, [setListTechs])\n\n  const fetchListTechs = async () => {\n    try {\n      const response = await getAllTechs()\n      return response.data\n    }\n    catch (error) {\n      return []\n    }\n  }\n\n  return <>\n    <div className=\"flex-container \">\n      <div className=\"filter-list-item fl-1\">\n        <h3 className=\"h3\">ListPage</h3>\n      </div>\n    </div>\n    <FilterListPage />\n    {list &&\n      <Suspense fallback={<Loader />}>\n        <Listado />\n      </Suspense>\n    }\n  </>\n};\n\nconst mapStateToProps = state => {\n  return {\n    list: state.techsReducer.techs,\n    filter: state.techsReducer.filter,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    updateFilter: updateFilter,\n    setListTechs: setListTechs,\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPage);"],"sourceRoot":""}