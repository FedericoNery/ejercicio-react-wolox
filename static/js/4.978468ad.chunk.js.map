{"version":3,"sources":["components/WebComponents/Button.jsx","components/WebComponents/Input.jsx","components/WebComponents/Checkbox.jsx","components/WebComponents/Option.jsx","components/WebComponents/Select.jsx","redux/actions/authenticationActions.js","components/WebComponents/FieldError.jsx","components/RegisterPage.jsx"],"names":["Button","props","id","disabled","type","children","Input","name","className","defaultProps","Checkbox","value","labelName","for","Option","Select","options","optionClassName","length","map","item","signUp","values","SIGNUP","updateForm","UPDATE_FORM","setErrors","SET_ERRORS","FieldError","errors","compose","withRouter","connect","state","formulario","authenticationReducer","errores","dispatch","bindActionCreators","history","onChangeInput","e","a","preventDefault","fieldName","target","fieldValue","onChangeSelect","parseInt","onChecked","checked","onSubmit","validateFormSignUp","valuesMapped","mapFormToSignUp","signup","response","datosAPersistir","data","isLogged","setLocalStorageItem","push","nombre","maxlength","minlength","placeholder","onChange","autocomplete","apellido","pais","getCountries","ciudad","getCitiesByCountryId","email","telefono","contrasenia","repetirContrasenia","terminosCondiciones"],"mappings":"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","file":"static/js/4.978468ad.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst Button = props => {\n    const { id, disabled, type } = props\n    return <>\n        <button id={id} type={type} disabled={disabled} {...props}>{props.children}</button>\n    </>\n};\n\nButton.propTypes = {\n    id: PropTypes.string,\n    disabled: PropTypes.bool,\n    type: PropTypes.string,\n  };\n\nexport default Button;","import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst Input = props => {\n    const { id, name, type, className } = props\n    return <>\n        <input type={type} id={id} name={name} className={className} {...props}></input>\n    </>\n};\n\nInput.defaultProps = {\n    type: \"text\",\n    className: \"input input-round-large input-border\"\n  };\n\nInput.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n  };\n\nexport default Input;\n\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst Checkbox = props => {\n    const { id, name, value, labelName, className } = props\n    return <>\n        <input type=\"checkbox\" id={id} name={name} value={value} className={className} {...props} />        \n        <label for={id}>{labelName}</label>\n    </>\n};\n\n\nCheckbox.defaultProps ={\n    className: \"check\"\n}\n\nCheckbox.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string\n  };\n\nexport default Checkbox;","import React from 'react'\nimport PropTypes from 'prop-types';\n\nconst Option = props => {\n    const { name, value, className } = props\n    return <>\n        <option value={value} className={className}>{name}</option>\n    </>\n};\n\nOption.defaultProps = {\n    className: \"option\"\n}\n\nOption.propTypes = {\n    value: PropTypes.string,\n    name: PropTypes.string,\n  };\n\nexport default Option;\n\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Option from './Option';\n\nconst Select = props => {\n    const { id, name, options, className, optionClassName } = props\n    return <>\n        {/* <label for=\"cars\">Choose a car:</label> */}\n        <select name={name} id={id} className={className} {...props}>\n            {\n                options.length > 0 && options.map((item) => {\n                    return <Option value={item.value} name={item.name} className={optionClassName}/>\n                })\n            }\n        </select>\n    </>\n};\n\nSelect.defaultProps = {\n    options: [],\n    className: \"select\",\n};\n\nSelect.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.shape(\n        {\n            value: PropTypes.string,\n            name: PropTypes.string\n        }\n    )),\n    className: PropTypes.string\n};\n\nexport default Select;\n\n\n\n","import { SET_ERRORS, SIGNUP, UPDATE_FORM, VALIDATE_FORM } from \"../types/authenticationTypes\";\n\nexport const signUp = (values) => {\n    return {\n        type: SIGNUP,\n        values: values\n    };\n};\n\nexport const updateForm = (values) => {\n    return {\n        type: UPDATE_FORM,\n        values: values\n    };\n};\n\nexport const setErrors = (values) => {\n    return {\n        type: SET_ERRORS,\n        values: values\n    };\n};\n\nexport const validateFormSignUp = (values) => {\n    return {\n        type: VALIDATE_FORM,\n        values: values\n    };\n};\n","import React from 'react'\n\nconst FieldError = (props) => {\n    const { errors } = props\n\n    return (<>\n        {\n            errors && errors.length > 0 && errors.map(item => <p className=\"label-error\">{item}</p>)\n        }\n        {props.children}\n    </>)\n}\n\nexport default FieldError","import React from 'react'\nimport Input from './WebComponents/Input'\nimport Checkbox from './WebComponents/Checkbox'\nimport Button from './WebComponents/Button'\nimport Select from './WebComponents/Select'\nimport { getCitiesByCountryId, getCountries } from '../services/LocationService'\nimport { setErrors, updateForm, signUp } from '../redux/actions/authenticationActions'\nimport { connect } from 'react-redux'\nimport { bindActionCreators, compose } from 'redux'\nimport { mapFormToSignUp, signup, validateFormSignUp } from '../services/AuthenticationService'\nimport { withRouter } from 'react-router-dom'\nimport FieldError from './WebComponents/FieldError'\nimport { setLocalStorageItem } from '../configuration/localStorage'\n\nconst RegisterPage = props => {\n  const { updateForm, setErrors, signUp } = props\n  const { formulario, errores, history } = props\n\n  const onChangeInput = async (e) => {\n    e.preventDefault()\n    const fieldName = e.target.name\n    const fieldValue = e.target.value\n    updateForm({ ...formulario, [fieldName]: fieldValue })\n  }\n\n  const onChangeSelect = async (e) => {\n    e.preventDefault()\n    const fieldName = e.target.name\n    const fieldValue = parseInt(e.target.value)\n    if(fieldName === \"pais\" && fieldValue === 0)\n      updateForm({ ...formulario, \"ciudad\": null, [fieldName]: fieldValue })\n    else\n      updateForm({ ...formulario, [fieldName]: fieldValue })\n  }\n\n  const onChecked = async (e) => {\n    const fieldName = e.target.name\n    const fieldValue = e.target.checked\n    updateForm({ ...formulario, [fieldName]: fieldValue })\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      const esValidoElFormulario = validateFormSignUp(formulario, setErrors)\n      if (esValidoElFormulario) {\n        const valuesMapped = mapFormToSignUp(formulario)\n        const response = await signup(valuesMapped)\n        const datosAPersistir = { ...response.data, isLogged: true }\n        signUp(datosAPersistir)\n\n        setLocalStorageItem(\"usuarioRegistrado\", datosAPersistir)\n\n        history.push(`/`)\n      }\n    }\n    catch (error) {\n\n    }\n  }\n\n  return (<div className=\"flex-container flex-flow-wrap flex-content-center\">\n    <div className=\"flex-item-fs\">\n      <h3 className=\"h3\">Register Page</h3>\n      <form onSubmit={onSubmit}>\n        <FieldError errors={errores.nombre}>\n          <Input id=\"inputNombre\" name=\"nombre\" maxlength=\"30\" minlength=\"1\" placeholder=\"Nombre\" onChange={onChangeInput} autocomplete=\"off\"></Input>\n        </FieldError>\n        <FieldError errors={errores.apellido}>\n          <Input id=\"inputApellido\" name=\"apellido\" maxlength=\"30\" placeholder=\"Apellido\" minlength=\"1\" onChange={onChangeInput} autocomplete=\"off\"></Input>\n        </FieldError>\n        <FieldError errors={errores.pais}>\n          <Select id=\"inputPais\" name=\"pais\" options={getCountries()} onChange={onChangeSelect} />\n        </FieldError>\n        <FieldError errors={errores.ciudad}>\n          {(formulario.pais !== 0 && formulario.pais) && <Select id=\"inputCiudad\" name=\"ciudad\" options={getCitiesByCountryId(formulario.pais)} onChange={onChangeSelect} />}\n        </FieldError>\n        <FieldError errors={errores.email}>\n          <Input id=\"inputEmail\" name=\"email\" type=\"email\" placeholder=\"Email\" onChange={onChangeInput} autocomplete=\"off\"></Input>\n        </FieldError>\n        <FieldError errors={errores.telefono}>\n          <Input id=\"inputTelefono\" name=\"telefono\" placeholder=\"Teléfono\" type=\"tel\" onChange={onChangeInput}></Input>\n        </FieldError>\n        <FieldError errors={errores.contrasenia}>\n          <Input id=\"inputContrasenia\" name=\"contrasenia\" placeholder=\"Contraseña\" type=\"password\" onChange={onChangeInput} minlength=\"6\" autocomplete=\"off\"></Input>\n        </FieldError>\n        <FieldError errors={errores.repetirContrasenia}>\n          <Input id=\"inputRepetirContrasenia\" name=\"repetirContrasenia\" placeholder=\"Repetir contraseña\" type=\"password\" onChange={onChangeInput} minlength=\"6\" autocomplete=\"off\"></Input>\n        </FieldError>\n        <FieldError errors={errores.terminosCondiciones}>\n          <Checkbox id=\"chkTerminosCondiciones\" name=\"terminosCondiciones\" labelName=\"Acepta términos y condiciones\" onChange={onChecked} />\n        </FieldError>\n        <div className=\"flex-item-fs margin-top margin-bottom\">\n          <Button className=\"btn-solid info\" id=\"btnSubmit\" type=\"submit\">Enviar</Button>\n        </div>\n      </form>\n    </div>\n\n  </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    formulario: state.authenticationReducer.formulario,\n    errores: state.authenticationReducer.errores,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    updateForm: updateForm,\n    setErrors: setErrors,\n    signUp: signUp\n  }, dispatch)\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps))(RegisterPage);"],"sourceRoot":""}